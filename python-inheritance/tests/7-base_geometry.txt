# Test cases for 7-base_geometry.py

# Import the BaseGeometry class
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

# Create an instance of BaseGeometry
>>> bg = BaseGeometry()

# Test area() method (should raise an Exception)
>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented

# Test integer_validator with valid inputs
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)

# Test integer_validator with string input (should raise TypeError)
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
    ...
TypeError: name must be an integer

# Test integer_validator with 0 (should raise ValueError)
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0

# Test integer_validator with negative number (should raise ValueError)
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
    ...
ValueError: distance must be greater than 0

# Test integer_validator with float (should raise TypeError)
>>> bg.integer_validator("average", 7.5)
Traceback (most recent call last):
    ...
TypeError: average must be an integer

# Test integer_validator with boolean (should raise TypeError)
>>> bg.integer_validator("valid", True)
Traceback (most recent call last):
    ...
TypeError: valid must be an integer

# Test integer_validator with None (should raise TypeError)
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
    ...
TypeError: age must be an integer

# Test integer_validator with complex number (should raise TypeError)
>>> bg.integer_validator("complex", 5+2j)
Traceback (most recent call last):
    ...
TypeError: complex must be an integer

# Test integer_validator with no arguments (should raise TypeError)
>>> bg.integer_validator()
Traceback (most recent call last):
    ...
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

# Test integer_validator with only one argument (should raise TypeError)
>>> bg.integer_validator("age")
Traceback (most recent call last):
    ...
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

# Test integer_validator with more than two arguments (should raise TypeError)
>>> bg.integer_validator("age", 18, 20)
Traceback (most recent call last):
    ...
TypeError: BaseGeometry.integer_validator() takes 3 positional arguments but 4 were given

# Test integer_validator with very large integer (should pass)
>>> bg.integer_validator("population", 999999999999)

# Test integer_validator with list (should raise TypeError)
>>> bg.integer_validator("sizes", [1, 2, 3])
Traceback (most recent call last):
    ...
TypeError: sizes must be an integer

# Test integer_validator with tuple (should raise TypeError)
>>> bg.integer_validator("coordinates", (1, 2))
Traceback (most recent call last):
    ...
TypeError: coordinates must be an integer

# Test integer_validator with dictionary (should raise TypeError)
>>> bg.integer_validator("profile", {"age": 25})
Traceback (most recent call last):
    ...
TypeError: profile must be an integer